##SQL RETAIL SALES ANALYSIS--P1##
CREATE DATABASE SQL_PROJECT2;
##CREATE TABLE ##
CREATE TABLE RETAIL_SALES
(
transactions_id INT PRIMARY KEY, 
sale_date	DATE,
sale_time	TIME,
customer_id	INT,
gender	VARCHAR(15),
age_category VARCHAR(50),	
quantiy	INT,
price_per_unit	FLOAT,
cogs	FLOAT,
Total_sale FLOAT);
SELECT * FROM retail_sales_data;
SELECT count(*) from retail_sales_data;

#### to find out null values in the table### DATA CLEANING
 
select * from retail_sales_data 
where category is null or quantity is null or price_per_unit is null or cogs is null or total_sale is null;
delete from retail_sales_data
where transactions_id is null
or
sale_date is null
or
gender is null
or
category is null
or
quantity is null
or 
cogs is null
or 
total_sale is null;
### DATA EXPLORATION###
 
## HOW MANY SALES WE HAVE?##
 
SELECT COUNT(*) AS TOTAL_SALE FROM retail_sales_data;
-- HOW MANY UNIQUE CUSTOMERS WE HAVE?
SELECT COUNT(DISTINCT CUSTOMER_ID)  FROM retail_sales_data;
-- HOW MANY DIFFERENT CATEGORY WE HAVE?
SELECT COUNT(DISTINCT CATEGORY) FROM retail_sales_data;


-- DATA ANALYSIS AND BUSINESS KEY PROBLEMS AND ANSWERS--
-- Q1. RETRIEVE ALL COLUMNS FOR SALES MADE ON '2022-11-05'
SELECT * FROM retail_sales_data WHERE SALE_DATE = '2022-11-05';

-- Q2. RETRIEVE ALL TRANSACTIONS WHERE THE CATAGORY IS CLOTHING AND QUANTITY SOLD IS MORE THAN 4 IN THE MONTH OF NOV-2022?

SELECT * FROM retail_sales_data
WHERE CATEGORY = 'CLOTHING'
AND SALE_DATE BETWEEN '2022-11-01' AND '2022-11-30'
AND QUANTITY>=4 ;

-- Q3. TOTAL SALES FOR EACH CATEGORY?--

SELECT CATEGORY, SUM(TOTAL_SALE) AS NET_SALE,
COUNT(*) AS TOTAL_ORDERS  FROM RETAIL_SALES_DATA
GROUP BY 1;

-- FIND THE AVERAGE AGE OF CUSTOMERS WHO PURCHASED ITEMS FROM THE 'BEAUTY' CATEGORY'?--
SELECT * FROM retail_sales_data;
SELECT CATEGORY, ROUND(avg(AGE),2) FROM retail_sales_data WHERE CATEGORY = 'BEAUTY';

-- Q5. WRITE A SQL QUERY TO FIND ALL TRANSACTIONS WHERE THE TOTAL_SALE IS GREATER THAN 1000?--
SELECT * FROM retail_sales_data WHERE TOTAL_SALE > 1000 ;

-- Q6 WRITE A QUERY TO FIND TOTAL NUMBER OF TRANSACTIONS (TRANSACTIONS_ID) MADE BY EACH GENDER IS EACH CATEGORY?--

SELECT CATEGORY, GENDER, COUNT(*) AS TOTAL_TRANS FROM retail_sales_data GROUP BY CATEGORY, GENDER ORDER BY 1;

-- Q7 CALCULATE SALE FOR EACH MONTH. FIND OUT BEST SELLING MONTH IN EACH YEAR?--

 SELECT year, month, avg_sale from
 (
 select
 extract(YEAR FROM SALE_DATE) AS YEAR, 
 extract(MONTH FROM SALE_DATE) AS MONTH, 
 AVG(TOTAL_SALE) AS AVG_SALE,
 RANK() OVER(PARTITION BY EXTRACT(YEAR FROM SALE_DATE) ORDER BY AVG(TOTAL_SALE) DESC) AS ranked FROM retail_sales_data
 GROUP BY 1, 2 ) as t1
 where ranked =1;
 
 -- Q8. WRITE A SQL QUERY TO FIND THE TOP 5 CUSTOMERS BASED ON THE HIGHEST TOTAL SALES?--
 SELECT CUSTOMER_ID, SUM(TOTAL_SALE) AS TOTAL_SALES FROM retail_sales_data GROUP BY 1 ORDER BY 2 DESC LIMIT 5;
 
 -- Q9. FIND NUMBER OF UNIQUE CUSTOMERS WHO PURCHASED ITEM FROM EACH CATEGORY?--
 SELECT CATEGORY, COUNT(DISTINCT customer_id) AS UNIQUE_CUSTOMERS FROM retail_sales_data GROUP BY 1;
 
 -- Q10. CREATE EACH SHIFT AND NUMBERS OF ORDERS (EXAMPLE MORNING<12, AFTERNOON BETWEEN 12 &17, EVENING >17)
 SELECT * FROM retail_sales_data;
 WITH HOURLY_SALE
 AS(
SELECT *,
CASE
WHEN  EXTRACT(HOUR FROM SALE_TIME) < 12 THEN 'MORNING'
WHEN EXTRACT(HOUR FROM SALE_TIME) BETWEEN 12 AND 17 THEN 'AFTERNOON' ELSE  'EVENING'
END AS SHIFT
FROM RETAIL_SALES_DATA
)
SELECT 
SHIFT, COUNT(*) AS TOTAL_ORDERS
FROM HOURLY_SALE
GROUP BY SHIFT;

-- END OF PROJECT--
